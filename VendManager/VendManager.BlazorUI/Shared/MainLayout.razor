@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<div class="page">
    <DxGridLayout CssClass="page-layout">
        <Rows>
            <DxGridLayoutRow Areas="sidebar header" Height="auto"></DxGridLayoutRow>
            <DxGridLayoutRow Areas="sidebar content"></DxGridLayoutRow>
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="auto" />
            <DxGridLayoutColumn />
        </Columns>
        <Items>
            <DxGridLayoutItem Area="sidebar" CssClass="layout-sidebar">
                <Template>
                     <AuthorizeView>
                           <Authorized>
                                <NavMenu />
                           </Authorized>
                    </AuthorizeView>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Area="content" CssClass="content px-4">
                <Template>
                     <AuthorizeView>
                           <Authorized>
                    @if(!string.IsNullOrEmpty(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))) {
                        <div class="py-4">
                            <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="Back to Home" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="back-button" IconCssClass="icon-back" NavigateUrl="/"></DxButton>
                        </div>
                    }
                        </Authorized>
                    </AuthorizeView>
                    @Body
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</div>

@code {


    private bool _isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _isAuthenticated = user.Identity.IsAuthenticated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_isAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
        }
    }
    
  
}