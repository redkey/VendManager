@page "/users/details/{Id}"
@using VendManager.BlazorUI.Contracts
@using VendManager.BlazorUI.Services
@using VendManager.BlazorUI.Services.Base
@inject IUserManagementService UserService

@if(User == null)
{
    <DxLoadingPanel Visible="@isLoading" />
}
else
{
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h4 class="card-title mb-0">User Details</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Name:</strong> @User.AspNetUser.FirstName</p>
                    <p><strong>Email:</strong> @User.AspNetUser.Email</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Email Notification Interval (Minutes):</strong> @User.EmailNotificationIntervalMinutes</p>
                    <p><strong>SMS Notification Interval (Minutes):</strong> @User.SmsNotificationIntervalMinutes</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Email Notification Last Processed At (UTC):</strong> @User.EmailNotificationLastProcessedAtDateTimeUTC</p>
                </div>
                <div class="col-md-6">
                    <p><strong>SMS Notification Last Processed At (UTC):</strong> @User.SmSlNotificationLastProcessedAtDateTimeUTC</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private bool isLoading = true;

    public VendManager.BlazorUI.Services.Base.UserDetails User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUserDetails(Id);
        isLoading = false; // Set loading to false after data retrieval
    }
}
